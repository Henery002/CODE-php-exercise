/*
* TODO 网易云课堂-后盾网向军PHP视频教程
* 2017.09.25起笔记
* NANJING
*/

<2-04> 数据类型（一）
1.标量类型：
	1.整型(int)
	2.浮点型(float)
	3.字符串型(string)
	4.布尔型(boolean)
2.复合类型：
	1.数组(array)
	2.对象(object)
3.其他类型：
	1.资源(resource)
	2.NULL

4.定界符
	Heredoc技术。可用来输出大段的html和javascript脚本
	1.PHP定界符的作用就是按照原样，包括换行格式什么的，输出在其内部的东西；
	2.在PHP定界符中的任何特殊字符都不需要转义； 
	3.PHP定界符中的PHP变量会被正常的用其值来替换。
	[注意]：
		1.以 <<<End 开始标记开始，以End结束标记结束，**结束标记必须顶头写**，不能有缩进和空格，且在结束标记末尾要有分号；
		2.开始标记和开始标记相同，比如常用大写的EOT、EOD、EOF来表示，但是不只限于那几个，只要保证开始标记和结束标记不在正文中出现即可；
		3.位于开始标记和结束标记之间的变量可以被正常解析，但是函数则不可以。在heredoc中，变量不需要用连接符.或,来拼接。
	[参考文章]：
		CSDN:http://blog.csdn.net/u013372487/article/details/51883177
	[例]：
		06.php

<2-05> 数据类型（二）
1.布尔类型
	[例]：
		07.php 07.html
2.数组
3.对象
4.资源
5.NULL
...

<2-06> 数据类型（三）
	php是弱类型语言
1.getType(变量/常量)		//检测数据类型，返回数据类型名
2.is_int();					//返回值为布尔类型
3.is_float();
4.is_string();
5.is_array();
6.is_object();
7.is_resource();
8.is_bool();
...
	[例]：08.php

<2-07> 类型转换 外部变量
1.自由转换
2.强制转换					//转换之后不会改变原变量，只是复制了原变量
	1.$b = (int)$a;
	2.$b = (string)$a;
	3.$b = (array)$a;
	[注]：不修改原变量
3.setType($a,'string');		//setType()方法接收两个参数，分别定义被转换的数组、转换成的数据类型
	[注]：直接修改原变量	
4.具体的转换函数			//只针对标量类型变量(int/float/string)，无法转换对象/数组
	1.intval();				
		=> $b = intval($a);
	2.floatval();
	3.strval();
	[注]：
		1.无 arrayval() 方法
		2.对象/数组 类型变量无法被转换：Object of class user could not be converted to string
	[例]：09.php

<2-08> 运算符（一）
1.算数运算符
	+	-	*	/	%
2.递增/递减运算符
	1.$a++
	2.$a--
	3.++$a
	4.--$a
3.比较运算符
	>	<	==	===   >=	<=	!=	!==		?:	
4.逻辑运算符
	1.逻辑与	and / &&
	2.逻辑或	or  / ||
	3.逻辑非	not / !
	4.逻辑异或	xor
		[注]：当左右表达式只有一个为真，返回真。其余情况均返回假
		[例]：
			1.true xor true				//false
			2.true xor false			//true
			3.false xor false 			//false
5.位运算符
	1.按位与	&
		[注]：当左右两边的数转换为二进制后按位同位都为1时，则返回1，否则返回0。最后返回的结果是十进制数
		[注]：进制转换方法：
			1.decin($a);				//将$a转换为二进制
			2.base_convert($a,10,2);	//将$a由十进制转换为二进制
	2.按位或	|
		[注]：只有当同位都为0，才返回0，否则返回1
	3.按位异或	^
		[注]：只有当同位不同时，才返回1，否则返回0
	4.按位非	~
		[注]：将位中的1变为0，0变为1
6.位移运算符
	1.左移		<<
		[注]：将左边数的二进制位左移右边数指定数量的位，右边空位补0
	2.右移		>>
		[注]：将左边数的二进制位右移右边数指定数量的位，左边空位补0
		[例]：11.php
7.连接运算符
	1. .		//连接两个参数生成新的字符串
	2. .=		//把右边的值追加到左边的变量
8.赋值运算符
	1. =		//把右边值赋值给左边变量
9.禁止显示警告信息
	1. @		//放在函数、变量前，用以禁止显示系统报错的信息，不可以放于条件结构语句中，一般放置在有返回值的地方
10.三元表达式/三目运算符
	1. 表达式1 ? 表达式2 : 表达式3
11.短路运算符/运算符的短路逻辑
	1.逻辑与	&& / and
	2.逻辑或 	|| / or

<2-09> 运算符（二）
<2-10> 运算符（三）
<2-11> 运算符（四）
<2-12> 运算符（五）
<2-13> 流程控制（一）
1.if(){...}
2.switch(){...}
3.while(){...}
	[例]：2-13-while.php	乘法口诀表
4.do{...}while()
5.for(){...}
6.break;				//终止循环

<2-14> 流程控制（二）
<2-15> 流程控制（三）
<2-16> 流程控制（四）
<2-17> 流程控制（五）

<2-18> FUNCTION函数（一）

<2-19> FUNCTION函数（二）

<2-20> FUNCTION函数（三）

<2-21> 代码重用


<3-01> 定义字符串

<3-02> 字符串处理函数（一）

<3-03> 字符串处理函数（二）

<3-04> 字符串处理函数（三）

<3-05> 字符串处理函数（四）

<3-06> 字符串处理函数（五）

<3-07> 字符串处理函数（六）






